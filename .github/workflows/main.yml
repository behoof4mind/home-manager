name: PR creation event notification
on:
  pull_request:
    types: [opened, reopened]
jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   run: echo "$GITHUB_CONTEXT"
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   run: ls -lah ../../home-maneger/
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload-file-path: "./payload-slack-content.json"
          # For posting a rich message using Block Kit
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ github.event.pull_request.base.title }} #${{ github.event.pull_request.base.number }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\nPROJECT_NAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Created by:\n*<${{ github.event.pull_request.base.user.url }}|${{ github.event.pull_request.base.user.login }}>*"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Size:*\nSIZE_LABEL"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Complexity:*\nCOMPLEXITY_LABEL"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Affects:*\nAFFECTS"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Description:*\nDESCRIPTION"
                    }
                  ]
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Use the following emojies as reactions to answer to the request:\n\n"
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": ":clock1: - I can look at it later (use Thread later)"
                    },
                    {
                      "type": "mrkdwn",
                      "text": ":snail: - I would be able to look at it, but have no time"
                    },
                    {
                      "type": "mrkdwn",
                      "text": ":x: - I am not able to give a review, I don't know enough"
                    },
                    {
                      "type": "mrkdwn",
                      "text": ":hammer: - I'm done reviewing the PR, but I did request some changes"
                    },
                    {
                      "type": "mrkdwn",
                      "text": ":work-in-progress: - I will look at it right away"
                    },
                    {
                      "type": "mrkdwn",
                      "text": ":done: - I'm done reviewing the PR, all looks good"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PULL_REQUESTS_PIE }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
